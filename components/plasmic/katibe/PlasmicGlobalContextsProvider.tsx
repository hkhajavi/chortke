/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: afXULSfGYmou2jFpEc2QWJ

import * as React from "react";

import { _useGlobalVariants } from "./plasmic"; // plasmic-import: afXULSfGYmou2jFpEc2QWJ/projectModule
import { Fragment } from "@/fragment/fragment"; // plasmic-import: 0o7acyurdZUq/codeComponent
import { GrowthBook } from "@/fragment/growthbook"; // plasmic-import: -3uKKVaeE2qv/codeComponent
import { Splunk } from "@/fragment/splunk"; // plasmic-import: SVijqkya8cja/codeComponent
import { EmbedCss } from "@plasmicpkgs/plasmic-embed-css";
import { AntdConfigProvider } from "@plasmicpkgs/antd5/skinny/registerConfigProvider";
import { Hamdast } from "@/hamdast/hamdast"; // plasmic-import: hSq6gN8lmxlL/codeComponent

export interface GlobalContextsProviderProps {
  children?: React.ReactElement;
  fragmentProps?: Partial<
    Omit<React.ComponentProps<typeof Fragment>, "children">
  >;

  growthBookProps?: Partial<
    Omit<React.ComponentProps<typeof GrowthBook>, "children">
  >;

  splunkProps?: Partial<Omit<React.ComponentProps<typeof Splunk>, "children">>;
  embedCssProps?: Partial<
    Omit<React.ComponentProps<typeof EmbedCss>, "children">
  >;

  antdConfigProviderProps?: Partial<
    Omit<React.ComponentProps<typeof AntdConfigProvider>, "children">
  >;

  hamdastProps?: Partial<
    Omit<React.ComponentProps<typeof Hamdast>, "children">
  >;
}

export default function GlobalContextsProvider(
  props: GlobalContextsProviderProps
) {
  const {
    children,
    fragmentProps,
    growthBookProps,
    splunkProps,
    embedCssProps,
    antdConfigProviderProps,
    hamdastProps
  } = props;

  return (
    <Fragment
      {...fragmentProps}
      apiConfig={
        fragmentProps && "apiConfig" in fragmentProps
          ? fragmentProps.apiConfig!
          : { withCredentials: true }
      }
      previewApiConfig={
        fragmentProps && "previewApiConfig" in fragmentProps
          ? fragmentProps.previewApiConfig!
          : undefined
      }
      primaryColor={
        fragmentProps && "primaryColor" in fragmentProps
          ? fragmentProps.primaryColor!
          : "#000000"
      }
      rtl={fragmentProps && "rtl" in fragmentProps ? fragmentProps.rtl! : true}
    >
      <GrowthBook
        {...growthBookProps}
        apiHost={
          growthBookProps && "apiHost" in growthBookProps
            ? growthBookProps.apiHost!
            : "https://growthbook-api.paziresh24.com"
        }
        clientKey={
          growthBookProps && "clientKey" in growthBookProps
            ? growthBookProps.clientKey!
            : "sdk-ocviKI4srKxI6ep"
        }
        previewAttributes={
          growthBookProps && "previewAttributes" in growthBookProps
            ? growthBookProps.previewAttributes!
            : undefined
        }
      >
        <Splunk
          {...splunkProps}
          defaultApiHost={
            splunkProps && "defaultApiHost" in splunkProps
              ? splunkProps.defaultApiHost!
              : undefined
          }
          defaultApiKey={
            splunkProps && "defaultApiKey" in splunkProps
              ? splunkProps.defaultApiKey!
              : undefined
          }
        >
          <EmbedCss
            {...embedCssProps}
            css={
              embedCssProps && "css" in embedCssProps
                ? embedCssProps.css!
                : "@page {\r\n  size: A4 landscape; \r\n  margin: 0;\r\n}\r\n\r\n@media print {\r\n  .page {\r\n    margin: 0;\r\n    border: initial;\r\n    border-radius: initial;\r\n    width: initial;\r\n    min-height: initial;\r\n    box-shadow: initial;\r\n    background: initial;\r\n    page-break-after: always;\r\n  }\r\n}"
            }
          >
            <AntdConfigProvider
              {...antdConfigProviderProps}
              borderRadius={
                antdConfigProviderProps &&
                "borderRadius" in antdConfigProviderProps
                  ? antdConfigProviderProps.borderRadius!
                  : 6
              }
              colorBgBase={
                antdConfigProviderProps &&
                "colorBgBase" in antdConfigProviderProps
                  ? antdConfigProviderProps.colorBgBase!
                  : "#ffffff"
              }
              colorError={
                antdConfigProviderProps &&
                "colorError" in antdConfigProviderProps
                  ? antdConfigProviderProps.colorError!
                  : "#ff4d4f"
              }
              colorInfo={
                antdConfigProviderProps &&
                "colorInfo" in antdConfigProviderProps
                  ? antdConfigProviderProps.colorInfo!
                  : "#1677ff"
              }
              colorPrimary={
                antdConfigProviderProps &&
                "colorPrimary" in antdConfigProviderProps
                  ? antdConfigProviderProps.colorPrimary!
                  : "#1677ff"
              }
              colorSuccess={
                antdConfigProviderProps &&
                "colorSuccess" in antdConfigProviderProps
                  ? antdConfigProviderProps.colorSuccess!
                  : "#52c41a"
              }
              colorWarning={
                antdConfigProviderProps &&
                "colorWarning" in antdConfigProviderProps
                  ? antdConfigProviderProps.colorWarning!
                  : "#faad14"
              }
              controlHeight={
                antdConfigProviderProps &&
                "controlHeight" in antdConfigProviderProps
                  ? antdConfigProviderProps.controlHeight!
                  : 32
              }
              defaultDark={
                antdConfigProviderProps &&
                "defaultDark" in antdConfigProviderProps
                  ? antdConfigProviderProps.defaultDark!
                  : false
              }
              lineWidth={
                antdConfigProviderProps &&
                "lineWidth" in antdConfigProviderProps
                  ? antdConfigProviderProps.lineWidth!
                  : 1
              }
              loadingText={
                antdConfigProviderProps &&
                "loadingText" in antdConfigProviderProps
                  ? antdConfigProviderProps.loadingText!
                  : undefined
              }
              removeLoading={
                antdConfigProviderProps &&
                "removeLoading" in antdConfigProviderProps
                  ? antdConfigProviderProps.removeLoading!
                  : undefined
              }
              sizeStep={
                antdConfigProviderProps && "sizeStep" in antdConfigProviderProps
                  ? antdConfigProviderProps.sizeStep!
                  : 4
              }
              sizeUnit={
                antdConfigProviderProps && "sizeUnit" in antdConfigProviderProps
                  ? antdConfigProviderProps.sizeUnit!
                  : 4
              }
              themeStyles={
                antdConfigProviderProps &&
                "themeStyles" in antdConfigProviderProps
                  ? antdConfigProviderProps.themeStyles!
                  : true
                    ? {
                        fontFamily: "var(--iran-sans-x)",
                        fontSize: "16px",
                        fontWeight: "400",
                        lineHeight: "1.5",
                        color: "#535353",
                        letterSpacing: "normal"
                      }
                    : undefined
              }
              wireframe={
                antdConfigProviderProps &&
                "wireframe" in antdConfigProviderProps
                  ? antdConfigProviderProps.wireframe!
                  : false
              }
            >
              <Hamdast
                {...hamdastProps}
                clientKey={
                  hamdastProps && "clientKey" in hamdastProps
                    ? hamdastProps.clientKey!
                    : undefined
                }
              >
                {children}
              </Hamdast>
            </AntdConfigProvider>
          </EmbedCss>
        </Splunk>
      </GrowthBook>
    </Fragment>
  );
}
